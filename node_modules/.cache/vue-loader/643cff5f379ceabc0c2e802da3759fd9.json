{"remainingRequest":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/odinndagur/Code/Github/tonleikar/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/odinndagur/Code/Github/tonleikar/src/views/Home.vue","mtime":1611313915176},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNldC1jYXJkIHsKICBkaXNwbGF5OiBibG9jazsKICBtYXJnaW46IGF1dG87CiAgbWF4LXdpZHRoOiA5MCU7Cn0KZGl2ewogIG1heC13aWR0aDo2MDBweDsKICBtYXJnaW46YXV0bzsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    {{setCount}} sets.\n    <SetCard class=\"set-card\" v-for=\"set in sorted\" :key=\"set\" :set=\"set\" /> <br />\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport SetCard from \"@/components/SetCard.vue\";\n\nimport SetsData from \"../assets/sets.json\";\nexport default {\n  name: \"Home\",\n  components: {\n    SetCard,\n  },\n  data: () => {\n    return {\n      sets: SetsData,\n      selectedArtist: \"\",\n      selectedVenue: \"\",\n      filterArtists: false,\n      filterVenues: false,\n    };\n  },\n  computed: {\n    sorted() {\n      let tempArr = this.sets;\n      if (this.filterArtists) {\n        tempArr = tempArr.filter((set) => set.artist == this.selectedArtist);\n      }\n      if (this.filterVenues) {\n        tempArr = tempArr.filter((set) => set.venue == this.selectedVenue);\n      }\n\n      // return tempArr.sort();\n      return tempArr.sort((a, b) => {\n        let dateA,dateB;\n        if(a.date.length <= 4){\n          dateA = '' + dateA + '-' + '01-01T00:00';\n        }\n                if(b.date.length <= 4){\n          dateB = '' + dateB + '-' + '01-01T00:00';\n        }\n        else{\n        dateA = a.date.split(\".\");\n        dateB = b.date.split(\".\");\n        if(!dateA[2]){\n          dateA[1] = '01';\n          dateA[2] = '01';\n          dateB[1] = '01';\n          dateB[2] = '01';\n        }\n        dateA = \"\" + dateA[2] + \"-\" + dateA[1] + \"-\" + dateA[0] + \"T00:00\";\n        dateB = \"\" + dateB[2] + \"-\" + dateB[1] + \"-\" + dateB[0] + \"T00:00\";\n        }\n        return new Date(dateB) - new Date(dateA);\n      });\n    },\n    noDuplicatesArtists() {\n      let arr = [];\n      this.sets.forEach((set) => arr.push(set.artist));\n      return [...new Set(arr)].sort();\n    },\n    noDuplicatesVenues() {\n      let arr = [];\n      this.sets.forEach((set) => arr.push(set.venue));\n      return [...new Set(arr)].sort();\n    },\n    setCount(){\n      return this.sets.length;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.set-card {\n  display: block;\n  margin: auto;\n  max-width: 90%;\n}\ndiv{\n  max-width:600px;\n  margin:auto;\n}\n</style>\n"]}]}