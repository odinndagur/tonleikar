{"remainingRequest":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/odinndagur/Code/Github/tonleikar/src/views/Artists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/odinndagur/Code/Github/tonleikar/src/views/Artists.vue","mtime":1610926534852},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTZXRzRGF0YSBmcm9tICIuLi9hc3NldHMvc2V0cy5qc29uIjsKaW1wb3J0IEFydGlzdENhcmQgZnJvbSAiLi4vY29tcG9uZW50cy9BcnRpc3RDYXJkLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEFydGlzdENhcmQgfSwKICBuYW1lOiAiQXJ0aXN0cyIsCiAgZGF0YTogKCkgPT4gewogICAgcmV0dXJuIHsKICAgICAgYXJ0aXN0czogU2V0c0RhdGEsCiAgICAgIGFydGlzdDogIlI2MDEzIiwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY291bnQoKSB7CiAgICAgIHJldHVybiB0aGlzLmFydGlzdHMuZmlsdGVyKChhKSA9PiBhLmFydGlzdCA9PSB0aGlzLmFydGlzdCkubGVuZ3RoOwogICAgfSwKICAgIG5vRHVwbGljYXRlc0FydGlzdHMoKSB7CiAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgdGhpcy5hcnRpc3RzLmZvckVhY2goKGEpID0+IGFyci5wdXNoKGEuYXJ0aXN0KSk7CiAgICAgIHJldHVybiBbLi4ubmV3IFNldChhcnIpXS5zb3J0KCk7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgICAgIGZpbHRlcmVkKGFydGlzdCkgewogICAgICByZXR1cm4gdGhpcy5hcnRpc3RzLmZpbHRlcigoYSkgPT4gYS5hcnRpc3QgPT0gYXJ0aXN0KTsKICAgIH0sCiAgfQp9Owo="},{"version":3,"sources":["Artists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Artists.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"artists\">\n    <!-- <ul>\n      <li v-for=\"venue in venues\" :key=\"venue\">{{venue.venue}}</li>\n    </ul> -->\n    <ArtistCard v-for=\"artist in noDuplicatesArtists\" :key=\"artist\" :value=\"artist\" :sets=\"filtered(artist)\"/>\n    <!-- <h3>Filter By Artist</h3>\n    <select v-model=\"artist\">\n      <option\n        v-for=\"artist in noDuplicatesArtists\"\n        :key=\"artist\"\n        :value=\"artist\"\n      >\n        {{ artist }}\n      </option>\n    </select>\n    <ul>\n      <li v-for=\"artist in filtered\" :key=\"artist.videoId\">\n        {{ artist.artist }} @ {{ artist.venue }} {{ artist.date }}\n      </li>\n    </ul>\n    <ul></ul>\n    {{ count }} -->\n  </div>\n</template>\n\n<script>\nimport SetsData from \"../assets/sets.json\";\nimport ArtistCard from \"../components/ArtistCard.vue\";\nexport default {\n  components: { ArtistCard },\n  name: \"Artists\",\n  data: () => {\n    return {\n      artists: SetsData,\n      artist: \"R6013\",\n    };\n  },\n  computed: {\n    count() {\n      return this.artists.filter((a) => a.artist == this.artist).length;\n    },\n    noDuplicatesArtists() {\n      let arr = [];\n      this.artists.forEach((a) => arr.push(a.artist));\n      return [...new Set(arr)].sort();\n    },\n  },\n  methods: {\n        filtered(artist) {\n      return this.artists.filter((a) => a.artist == artist);\n    },\n  }\n};\n</script>\n\n<style scoped>\nul {\n  list-style: none;\n}\n.artistCard {\noutline:3px black;\n}\n</style>\n"]}]}