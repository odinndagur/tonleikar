{"remainingRequest":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/odinndagur/Code/Github/tonleikar/src/views/ImportSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/odinndagur/Code/Github/tonleikar/src/views/ImportSet.vue","mtime":1610840708615},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/odinndagur/Code/Github/tonleikar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIFRPRE86IDx0ZXh0YXJlYSB2LW1vZGVsPSJtZXNzYWdlIiBwbGFjZWhvbGRlcj0iYWRkIG11bHRpcGxlIGxpbmVzIj48L3RleHRhcmVhPiAKLy8gw60gc3Rhw7Bpbm4gZnlyaXIgPGlucHV0PiB0aWwgYcOwIGdldGEgZ2VydCBtw7ZyZyBzZXR0IMOtIGVpbnUKaW1wb3J0IFNldENhcmQgZnJvbSAiLi4vY29tcG9uZW50cy9TZXRDYXJkLnZ1ZSI7CmxldCBhcGlLZXkgPSAiQUl6YVN5REU3UHRYTTVTU1B5ZzVZLU51ZEtkQk1jSjBZYXNucURRIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSW1wb3J0U2V0IiwKICBjb21wb25lbnRzOiB7CiAgICBTZXRDYXJkLAogIH0sCiAgZGF0YTogKCkgPT4gewogICAgcmV0dXJuIHsKICAgICAgdXJsOiAiIiwKICAgICAgdGl0bGU6ICIiLAogICAgICBzZXRzOiBbXSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0VmlkSWQoKSB7CiAgICAgIGxldCBpZCA9IHRoaXMudXJsLnNwbGl0KCJ2PSIpWzFdOwogICAgICB2YXIgYW1wZXJzYW5kUG9zaXRpb24gPSBpZC5pbmRleE9mKCImIik7CiAgICAgIGlmIChhbXBlcnNhbmRQb3NpdGlvbiAhPSAtMSkgewogICAgICAgIGlkID0gaWQuc3Vic3RyaW5nKDAsIGFtcGVyc2FuZFBvc2l0aW9uKTsKICAgICAgfQogICAgICByZXR1cm4gaWQ7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgb25TdWJtaXQoKSB7CiAgICAgIHRoaXMuZ2V0RGF0YSgpOwogICAgfSwKICAgIGFzeW5jIGdldERhdGEoKSB7CiAgICAgIGxldCB2aWRlb0lkID0gdGhpcy5nZXRWaWRJZDsKICAgICAgdGhpcy51cmwgPSAnJzsKICAgICAgbGV0IHJlcyA9IGF3YWl0IGZldGNoKAogICAgICAgICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS95b3V0dWJlL3YzL3ZpZGVvcz9wYXJ0PXNuaXBwZXQmaWQ9IiArCiAgICAgICAgICB2aWRlb0lkICsKICAgICAgICAgICIma2V5PSIgKwogICAgICAgICAgYXBpS2V5CiAgICAgICk7CiAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTsKICAgICAgbGV0IHRpdGxlID0gZGF0YS5pdGVtc1swXS5zbmlwcGV0LnRpdGxlOwogICAgICB0aGlzLnRpdGxlID0gdGl0bGU7CiAgICAgIGNvbnNvbGUubG9nKHRpdGxlKTsKCiAgICAgIGxldCBzcGxpdCA9IHRpdGxlLnNwbGl0KCIgIik7CiAgICAgIGxldCBhcnRpc3QgPSB0aXRsZS5zcGxpdCgiQCIpWzBdLnRyaW0oKTsKICAgICAgbGV0IGRhdGUgPSBzcGxpdFtzcGxpdC5sZW5ndGggLSAxXS50cmltKCk7CiAgICAgIGxldCB2ZW51ZSA9IHRpdGxlLnNwbGl0KCJAIilbMV0ucmVwbGFjZSgiQCIsICIiKS5yZXBsYWNlKGRhdGUsICIiKS50cmltKCk7CiAgICAgIHRoaXMuc2V0cy5wdXNoKHsKICAgICAgICBhcnRpc3QsCiAgICAgICAgdmVudWUsCiAgICAgICAgZGF0ZSwKICAgICAgICB2aWRlb0lkLAogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coYXJ0aXN0LCBkYXRlLCB2ZW51ZSk7CiAgICB9LAogICAgc2F2ZUpTT04oKXsgCiAgICAgIGxldCBvYmogICA9IHRoaXMuc2V0czsgCiAgICAgIGxldCBkYXRhICA9ICJ0ZXh0L2pzb247Y2hhcnNldD11dGYtOCwiICsgZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KG9iaikpOyAKIAogICAgICBsZXQgYSAgICAgICA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsgCiAgICAgIGEuaHJlZiAgICAgID0gJ2RhdGE6JyArIGRhdGE7IAogICAgICBhLmRvd25sb2FkICA9ICdzZXRzLmpzb24nOyAKICAgICAgLy8gYS5pbm5lckhUTUwgPSAnZG93bmxvYWQgLnR4dCBmaWxlIG9mIGpzb24nOyAKIAogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykuYXBwZW5kQ2hpbGQoYSk7IAogICAgICBhLmNsaWNrKCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ImportSet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ImportSet.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"ImportSet\">\n    <h1>Add sets</h1>\n\n    <input v-model=\"url\" v-on:keyup.enter=\"onSubmit\" placeholder=\"url\" />\n    <button @click=\"onSubmit\">Add set</button>\n\n    <button @click=\"saveJSON\">save JSON</button>\n\n    <!--<p>Preview: {{title}}</p>-->\n    <SetCard v-for=\"set in sets\" :set=\"set\" :key=\"set.videoId\" />\n    <!-- <ul>\n      <li v-for=\"set in sets\" :key=\"set.videoId\">\n        {{ set.artist }} @ {{ set.venue }} {{ set.date }}\n      </li>\n    </ul> -->\n  </div>\n</template>\n\n<script>\n// TODO: <textarea v-model=\"message\" placeholder=\"add multiple lines\"></textarea> \n// í staðinn fyrir <input> til að geta gert mörg sett í einu\nimport SetCard from \"../components/SetCard.vue\";\nlet apiKey = \"AIzaSyDE7PtXM5SSPyg5Y-NudKdBMcJ0YasnqDQ\";\n\nexport default {\n  name: \"ImportSet\",\n  components: {\n    SetCard,\n  },\n  data: () => {\n    return {\n      url: \"\",\n      title: \"\",\n      sets: [],\n    };\n  },\n  computed: {\n    getVidId() {\n      let id = this.url.split(\"v=\")[1];\n      var ampersandPosition = id.indexOf(\"&\");\n      if (ampersandPosition != -1) {\n        id = id.substring(0, ampersandPosition);\n      }\n      return id;\n    },\n  },\n  methods: {\n    onSubmit() {\n      this.getData();\n    },\n    async getData() {\n      let videoId = this.getVidId;\n      this.url = '';\n      let res = await fetch(\n        \"https://www.googleapis.com/youtube/v3/videos?part=snippet&id=\" +\n          videoId +\n          \"&key=\" +\n          apiKey\n      );\n      let data = await res.json();\n      let title = data.items[0].snippet.title;\n      this.title = title;\n      console.log(title);\n\n      let split = title.split(\" \");\n      let artist = title.split(\"@\")[0].trim();\n      let date = split[split.length - 1].trim();\n      let venue = title.split(\"@\")[1].replace(\"@\", \"\").replace(date, \"\").trim();\n      this.sets.push({\n        artist,\n        venue,\n        date,\n        videoId,\n      });\n      console.log(artist, date, venue);\n    },\n    saveJSON(){ \n      let obj   = this.sets; \n      let data  = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj)); \n \n      let a       = document.createElement('a'); \n      a.href      = 'data:' + data; \n      a.download  = 'sets.json'; \n      // a.innerHTML = 'download .txt file of json'; \n \n      document.getElementById('app').appendChild(a); \n      a.click();\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ninput {\n  -webkit-user-select: text; /* Chrome, Opera, Safari */\n  -moz-user-select: text; /* Firefox 2+ */\n  -ms-user-select: text; /* IE 10+ */\n  user-select: text; /* Standard syntax */\n}\n\nli {\n  list-style-type: none;\n}\n</style>"]}]}